<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>司机带你开车</title>
  <icon>https://cdn.dong4j.site/source/image/avatar.webp</icon>
  <subtitle>岁月静好，诗酒趁年华🍺</subtitle>
  <link href="https://blog.dong4j.site/atom.xml" rel="self"/>
  
  <link href="https://blog.dong4j.site/"/>
  <updated>2025-02-07T13:48:04.520Z</updated>
  <id>https://blog.dong4j.site/</id>
  
  <author>
    <name>dong4j</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从零开始开发一个 Hexo 插件：以 hexo-plugin-llmstxt 为例</title>
    <link href="https://blog.dong4j.site/posts/b902d8fd.html"/>
    <id>https://blog.dong4j.site/posts/b902d8fd.html</id>
    <published>2025-01-30T03:34:10.000Z</published>
    <updated>2025-02-07T13:48:04.520Z</updated>
    
    
    <summary type="html">从零开始开发一个 Hexo 插件，以 hexo-plugin-llmstxt 为例，涵盖了 llms.txt 的定义、背景、规范，Hexo 插件开发基础，包括插件类型、基本结构和命名规范。详细讲述了开发 hexo-plugin-llmstxt 的步骤，从初始化项目、编写 package.json 到实现核心功能、处理文章内容、文件生成等。还提到了开发过程中的注意事项、测试和发布方法，以及总结和参考资料。旨在帮助开发者理解 Hexo 插件开发流程，为文档处理提供实用工具。</summary>
    
    
    
    <category term="Hexo" scheme="https://blog.dong4j.site/categories/hexo/"/>
    
    
    <category term="新时代码农" scheme="https://blog.dong4j.site/tags/%E6%96%B0%E6%97%B6%E4%BB%A3%E7%A0%81%E5%86%9C/"/>
    
  </entry>
  
  <entry>
    <title>使用 Node.js 开发数字名片并集成 Chat 服务</title>
    <link href="https://blog.dong4j.site/posts/bb4018e9.html"/>
    <id>https://blog.dong4j.site/posts/bb4018e9.html</id>
    <published>2025-01-15T02:47:34.000Z</published>
    <updated>2025-02-07T13:48:04.521Z</updated>
    
    
    <summary type="html">这篇文章主要介绍了如何使用 Node.js 开发一个数字名片，并集成了一个使用 one-api 对接多家 LLM 接口的 Chat 服务。文章首先介绍了如何获取和使用各大厂商提供的 free-api，然后详细介绍了如何将这些 free-api 接入到 one-api 中。最后，文章还讨论了如何进行安全防控和性能调优。文章首先介绍了如何获取和使用各大厂商提供的 free-api。free-api 是各大厂商提供的免费 API，可以用于获取各种信息，如天气、新闻、股票等。文章详细介绍了如何注册并获取 free-api，以及如何使用这些 API 获取信息。接下来，文章介绍了如何将这些 free-api 接入到 one-api 中。one-api 是一个统一的 API 接口，可以对接多家 LLM 接口。文章详细介绍了如何配置 one-api，以及如何使用 one-api 调用 free-api。最后，文章讨论了如何进行安全防控和性能调优。文章介绍了如何使用防火墙和安全组进行安全防控，以及如何使用负载均衡和缓存进行性能调优。</summary>
    
    
    
    <category term="新时代码农" scheme="https://blog.dong4j.site/categories/%E6%96%B0%E6%97%B6%E4%BB%A3%E7%A0%81%E5%86%9C/"/>
    
    
    <category term="Node.js" scheme="https://blog.dong4j.site/tags/node-js/"/>
    
    <category term="one-api" scheme="https://blog.dong4j.site/tags/one-api/"/>
    
    <category term="LLM" scheme="https://blog.dong4j.site/tags/llm/"/>
    
  </entry>
  
  <entry>
    <title>从零开始开发 VSCode 插件：从 Hello World 到图片处理工具</title>
    <link href="https://blog.dong4j.site/posts/621bb677.html"/>
    <id>https://blog.dong4j.site/posts/621bb677.html</id>
    <published>2025-01-13T15:54:10.000Z</published>
    <updated>2025-02-07T13:48:04.519Z</updated>
    
    
    <summary type="html">在这篇博客中，我们将从最简单的 Hello World 插件开始，一步步学习如何开发 VSCode 插件，并最终实现一个实用的图片处理工具。我们会详细介绍插件的基础结构、命令和菜单的配置、如何添加配置支持以及进阶功能。此外，我们还将分享一些开发技巧和注意事项，并通过对一个实战案例的开发过程，展示如何将一个 VSCode 插件从概念变为现实。希望这篇教程能够帮助初学者开始 VSCode 插件开发之旅，并为经验丰富的开发者提供一些新的思路和灵感。</summary>
    
    
    
    <category term="新时代码农" scheme="https://blog.dong4j.site/categories/%E6%96%B0%E6%97%B6%E4%BB%A3%E7%A0%81%E5%86%9C/"/>
    
    
    <category term="插件开发" scheme="https://blog.dong4j.site/tags/%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="开发技巧" scheme="https://blog.dong4j.site/tags/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/"/>
    
    <category term="实战案例" scheme="https://blog.dong4j.site/tags/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/"/>
    
    <category term="VScode" scheme="https://blog.dong4j.site/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Chrome 插件开发实战：从零开始开发一个图片上传工具</title>
    <link href="https://blog.dong4j.site/posts/af11d9f5.html"/>
    <id>https://blog.dong4j.site/posts/af11d9f5.html</id>
    <published>2025-01-10T16:48:57.000Z</published>
    <updated>2025-02-07T13:48:04.519Z</updated>
    
    
    <summary type="html">在这篇博客中，我们将从零开始学习如何开发一个 Chrome 插件——图片上传工具。这个插件旨在帮助博主快速处理和上传图片，支持一键上传、自动压缩、格式转换、多语言支持、自定义配置以及即时反馈等功能。通过这个实战项目，你将学习到 Chrome 插件开发的基础知识和实战技巧，包括插件的核心组件、重要的 Chrome API、用户界面设计、国际化支持、开发技巧和最佳实践、调试技巧以及发布流程。此外，你还可以在 GitHub 上找到完整的项目代码，并参与到项目的改进中来。希望这篇教程能帮助你开始 Chrome 插件开发之旅。</summary>
    
    
    
    <category term="新时代码农" scheme="https://blog.dong4j.site/categories/%E6%96%B0%E6%97%B6%E4%BB%A3%E7%A0%81%E5%86%9C/"/>
    
    
    <category term="插件开发" scheme="https://blog.dong4j.site/tags/%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="开发技巧" scheme="https://blog.dong4j.site/tags/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/"/>
    
    <category term="实战案例" scheme="https://blog.dong4j.site/tags/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/"/>
    
    <category term="Chrome" scheme="https://blog.dong4j.site/tags/chrome/"/>
    
  </entry>
  
  <entry>
    <title>利用 AI 对博客文章进行智能分类</title>
    <link href="https://blog.dong4j.site/posts/f5478013.html"/>
    <id>https://blog.dong4j.site/posts/f5478013.html</id>
    <published>2024-12-31T16:00:00.000Z</published>
    <updated>2025-02-07T13:48:04.523Z</updated>
    
    
    <summary type="html">本文介绍了如何使用AI技术对博客内容进行智能分类，以实现更精准的内容管理和推荐。</summary>
    
    
    
    <category term="AI:人工智能" scheme="https://blog.dong4j.site/categories/ai-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
    <category term="博客" scheme="https://blog.dong4j.site/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="AI" scheme="https://blog.dong4j.site/tags/ai/"/>
    
    <category term="分类" scheme="https://blog.dong4j.site/tags/%E5%88%86%E7%B1%BB/"/>
    
    <category term="内容管理" scheme="https://blog.dong4j.site/tags/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>AI助力博客创作：自动生成摘要与标签的实战指南</title>
    <link href="https://blog.dong4j.site/posts/87c223f.html"/>
    <id>https://blog.dong4j.site/posts/87c223f.html</id>
    <published>2024-12-30T03:20:12.000Z</published>
    <updated>2025-02-07T13:48:04.526Z</updated>
    
    
    <summary type="html">本文探讨了如何利用AI技术自动为博客生成标签和摘要，以提升内容在信息爆炸时代的影响力。文章强调了标签和摘要的重要性，并介绍了AI在这一领域的技术优势，如高效性、准确性和个性化。接着，文章详细阐述了使用本地自建的LLM服务实现自动生成标签和摘要的过程，包括配置LLM服务、编写自动化脚本以及部署工作流程等。最后，文章总结了这一过程的优势，即提高效率、增强内容质量和促进本地化发展。</summary>
    
    
    
    <category term="AI:人工智能" scheme="https://blog.dong4j.site/categories/ai-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
    <category term="AI" scheme="https://blog.dong4j.site/tags/ai/"/>
    
    <category term="内容管理" scheme="https://blog.dong4j.site/tags/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/"/>
    
    <category term="博客优化" scheme="https://blog.dong4j.site/tags/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"/>
    
    <category term="信息检索" scheme="https://blog.dong4j.site/tags/%E4%BF%A1%E6%81%AF%E6%A3%80%E7%B4%A2/"/>
    
    <category term="本地化开发" scheme="https://blog.dong4j.site/tags/%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客部署与图片处理全攻略：自动化流程大揭秘</title>
    <link href="https://blog.dong4j.site/posts/461c6733.html"/>
    <id>https://blog.dong4j.site/posts/461c6733.html</id>
    <published>2024-12-30T02:45:57.000Z</published>
    <updated>2025-02-07T13:48:04.525Z</updated>
    
    
    <summary type="html">本文介绍了如何通过编写脚本和利用Makefile，简化Hexo博客的发布流程。作者详细描述了从图片处理、文章处理到部署到本地服务器和GitHub的全过程，包括使用Typora插入和管理图片、清理未引用图片、将图片转换为WebP格式、上传图片到图床以及根据不同环境编译文章等步骤。最后，作者通过Makefile将整个流程自动化，并通过命令行或VSCode插件运行。</summary>
    
    
    
    <category term="新时代码农" scheme="https://blog.dong4j.site/categories/%E6%96%B0%E6%97%B6%E4%BB%A3%E7%A0%81%E5%86%9C/"/>
    
    
    <category term="文件上传" scheme="https://blog.dong4j.site/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
    <category term="Hexo" scheme="https://blog.dong4j.site/tags/hexo/"/>
    
    <category term="博客发布" scheme="https://blog.dong4j.site/tags/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/"/>
    
    <category term="脚本自动化" scheme="https://blog.dong4j.site/tags/%E8%84%9A%E6%9C%AC%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="图片处理" scheme="https://blog.dong4j.site/tags/%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>群晖 NAS Docker 网络优化：配置 HTTP/SOCKS5 代理的终极指南</title>
    <link href="https://blog.dong4j.site/posts/13a784a6.html"/>
    <id>https://blog.dong4j.site/posts/13a784a6.html</id>
    <published>2024-12-30T01:27:46.000Z</published>
    <updated>2025-02-07T13:48:04.609Z</updated>
    
    
    <summary type="html">本教程介绍了在群晖NAS(DSM 7.2版本)上配置Docker代理的步骤。首先通过SSH连接到NAS，创建一个配置文件夹并编辑代理配置文件，设置HTTP或SOCKS5代理，然后重新加载重启Docker服务，最后验证代理是否设置成功并通过拉取镜像测试代理效果。在受限网络环境中，代理可以帮你顺利下载Docker镜像。</summary>
    
    
    
    <category term="Docker" scheme="https://blog.dong4j.site/categories/docker/"/>
    
    
    <category term="Docker" scheme="https://blog.dong4j.site/tags/docker/"/>
    
    <category term="群晖NAS" scheme="https://blog.dong4j.site/tags/%E7%BE%A4%E6%99%96nas/"/>
    
    <category term="DSM 7.2" scheme="https://blog.dong4j.site/tags/dsm-7-2/"/>
    
    <category term="代理配置" scheme="https://blog.dong4j.site/tags/%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>图片过多导致GitHub/Gitee仓库爆仓？这里有解决方案！</title>
    <link href="https://blog.dong4j.site/posts/d4c941b5.html"/>
    <id>https://blog.dong4j.site/posts/d4c941b5.html</id>
    <published>2024-12-28T07:39:35.000Z</published>
    <updated>2025-02-07T13:48:04.523Z</updated>
    
    
    <summary type="html">本文介绍了如何解决GitHub和Gitee仓库体积限制的问题，包括通过Git GC清理历史记录、使用git-filter-repo删除大文件历史和bfg-repo-cleaner工具清理大于特定大小的文件等方法。文章还包含了相应的命令行代码示例和效果图片。</summary>
    
    
    
    <category term="新时代码农" scheme="https://blog.dong4j.site/categories/%E6%96%B0%E6%97%B6%E4%BB%A3%E7%A0%81%E5%86%9C/"/>
    
    
    <category term="Git" scheme="https://blog.dong4j.site/tags/git/"/>
    
    <category term="GitHub" scheme="https://blog.dong4j.site/tags/github/"/>
    
    <category term="备份" scheme="https://blog.dong4j.site/tags/%E5%A4%87%E4%BB%BD/"/>
    
    <category term="仓库管理" scheme="https://blog.dong4j.site/tags/%E4%BB%93%E5%BA%93%E7%AE%A1%E7%90%86/"/>
    
    <category term="Gitee" scheme="https://blog.dong4j.site/tags/gitee/"/>
    
  </entry>
  
  <entry>
    <title>ComfyUI Desktop 安装攻略：自动化安装失败问题解决</title>
    <link href="https://blog.dong4j.site/posts/85d50e5.html"/>
    <id>https://blog.dong4j.site/posts/85d50e5.html</id>
    <published>2024-12-23T16:00:00.000Z</published>
    <updated>2025-02-07T13:48:04.524Z</updated>
    
    
    <summary type="html">本文记录了作者在尝试安装最新版本的ComfyUI-Desktop时遇到的问题和解决方法。首先遇到了PyTorch安装失败的问题，随后通过手动运行缺失的命令成功部署。接着，作者尝试使用虚拟环境中的python进行安装，并通过执行测试代码验证了安装成功。然而，在后续步骤中仍然缺少一些软件包，最终决定直接使用ComfyUI的`requirements.txt`文件安装依赖项，并顺利完成剩余的安装步骤。</summary>
    
    
    
    <category term="经验分享" scheme="https://blog.dong4j.site/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="ComfyUI Desktop" scheme="https://blog.dong4j.site/tags/comfyui-desktop/"/>
    
    <category term="PyTorch" scheme="https://blog.dong4j.site/tags/pytorch/"/>
    
    <category term="安装问题" scheme="https://blog.dong4j.site/tags/%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/"/>
    
    <category term="解决方法" scheme="https://blog.dong4j.site/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>智能化的内容管理工具：Hoarder的AI书签革命</title>
    <link href="https://blog.dong4j.site/posts/90130153.html"/>
    <id>https://blog.dong4j.site/posts/90130153.html</id>
    <published>2024-12-23T16:00:00.000Z</published>
    <updated>2025-02-07T13:48:04.525Z</updated>
    
    
    <summary type="html">Hoarder 是一款开源的 AI 书签管理工具，专为 NAS 部署设计。它通过 AI 技术自动标记内容，支持链接、笔记、图像和 PDF 的存储。此外，Hoarder 还提供全文搜索功能，以及 OCR 技术从图像中提取文本。该工具还支持多种平台，包括 Chrome 和 Firefox 插件、iOS 和 Android 应用等。</summary>
    
    
    
    <category term="HomeLab" scheme="https://blog.dong4j.site/categories/homelab/"/>
    
    
    <category term="Hoarder" scheme="https://blog.dong4j.site/tags/hoarder/"/>
    
    <category term="AI 书签管理" scheme="https://blog.dong4j.site/tags/ai-%E4%B9%A6%E7%AD%BE%E7%AE%A1%E7%90%86/"/>
    
    <category term="NAS 部署" scheme="https://blog.dong4j.site/tags/nas-%E9%83%A8%E7%BD%B2/"/>
    
    <category term="内容存储" scheme="https://blog.dong4j.site/tags/%E5%86%85%E5%AE%B9%E5%AD%98%E5%82%A8/"/>
    
    <category term="全文搜索" scheme="https://blog.dong4j.site/tags/%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>ZSH 启动慢，原来是这个问题！</title>
    <link href="https://blog.dong4j.site/posts/5eb89a7b.html"/>
    <id>https://blog.dong4j.site/posts/5eb89a7b.html</id>
    <published>2024-12-03T16:00:00.000Z</published>
    <updated>2025-02-07T13:48:04.522Z</updated>
    
    
    <summary type="html">本文详细介绍了 macOS 中将 zsh 配置为默认 shell 时，由于配置文件加载顺序导致的启动时间过长的问题。文章首先解释了 Bash 和 zsh 的配置加载顺序差异，并分析了问题出现的可能原因。接着，通过排查发现是由于 `.zshrc` 文件向 `.zprofile` 添加了大量重复的 `eval` 命令导致。最后，提供了优化 zsh 启动时间的建议和参考资料。</summary>
    
    
    
    <category term="新时代码农" scheme="https://blog.dong4j.site/categories/%E6%96%B0%E6%97%B6%E4%BB%A3%E7%A0%81%E5%86%9C/"/>
    
    
    <category term="macOS" scheme="https://blog.dong4j.site/tags/macos/"/>
    
    <category term="Homebrew" scheme="https://blog.dong4j.site/tags/homebrew/"/>
    
    <category term="zsh" scheme="https://blog.dong4j.site/tags/zsh/"/>
    
    <category term="配置加载顺序" scheme="https://blog.dong4j.site/tags/%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F/"/>
    
    <category term="启动时间优化" scheme="https://blog.dong4j.site/tags/%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>HomeLab 网络续集：升级 10G 网络-再战 10 年</title>
    <link href="https://blog.dong4j.site/posts/7e09e56.html"/>
    <id>https://blog.dong4j.site/posts/7e09e56.html</id>
    <published>2024-11-30T16:00:00.000Z</published>
    <updated>2025-02-07T13:48:04.595Z</updated>
    
    
    <summary type="html">本文介绍了博主升级家庭网络到万兆的经验，包括从犹豫不决到决定升级的过程、第一次接触光纤和光模块的相关知识、设备购买、网络拓扑设计、网络环境配置和网络测试等方面的细节。文章详细探讨了雷电 4/3 和 USB4.0 的差异，以及 JHL7440 和 ASM2464PD 两款主控芯片的性能对比。最后，博主分享了网络拓扑图、硬件和软件的部署情况，并对升级效果进行了测试。</summary>
    
    
    
    <category term="HomeLab:中年男人的快乐源泉" scheme="https://blog.dong4j.site/categories/homelab-%E4%B8%AD%E5%B9%B4%E7%94%B7%E4%BA%BA%E7%9A%84%E5%BF%AB%E4%B9%90%E6%BA%90%E6%B3%89/"/>
    
    
    <category term="HomeLab" scheme="https://blog.dong4j.site/tags/homelab/"/>
    
    <category term="网络升级" scheme="https://blog.dong4j.site/tags/%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7/"/>
    
    <category term="万兆网络" scheme="https://blog.dong4j.site/tags/%E4%B8%87%E5%85%86%E7%BD%91%E7%BB%9C/"/>
    
    <category term="雷电接口" scheme="https://blog.dong4j.site/tags/%E9%9B%B7%E7%94%B5%E6%8E%A5%E5%8F%A3/"/>
    
    <category term="USB4.0" scheme="https://blog.dong4j.site/tags/usb4-0/"/>
    
    <category term="JHL7440" scheme="https://blog.dong4j.site/tags/jhl7440/"/>
    
    <category term="ASM2464PD" scheme="https://blog.dong4j.site/tags/asm2464pd/"/>
    
  </entry>
  
  <entry>
    <title>智能监控燃气站：无人值守运维新时代</title>
    <link href="https://blog.dong4j.site/posts/20ab66ff.html"/>
    <id>https://blog.dong4j.site/posts/20ab66ff.html</id>
    <published>2024-11-07T03:38:30.000Z</published>
    <updated>2025-02-07T13:48:04.532Z</updated>
    
    
    <summary type="html">本文介绍了针对燃气站设备的自动化监控解决方案。该方案通过连接IPC、NVR、门禁系统、网络交换机、UPS等设备，实现无人值守的运维模式。监控内容包括视频展示、门禁状态监测、网络运行数据收集、环境参数控制、远程重启功能以及状态数据的集中展示和云端上报。方案设计遵循简单适用、稳定安全、可扩展易维护的原则，并提供了详细的系统架构图和子系统说明。此外，还介绍了连接方式、监控系统的基础功能及监控子系统的具体实现细节。</summary>
    
    
    
    <category term="新时代码农" scheme="https://blog.dong4j.site/categories/%E6%96%B0%E6%97%B6%E4%BB%A3%E7%A0%81%E5%86%9C/"/>
    
    
    <category term="数据分析" scheme="https://blog.dong4j.site/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="燃气站设备" scheme="https://blog.dong4j.site/tags/%E7%87%83%E6%B0%94%E7%AB%99%E8%AE%BE%E5%A4%87/"/>
    
    <category term="自动化监控" scheme="https://blog.dong4j.site/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9B%91%E6%8E%A7/"/>
    
    <category term="无人值守" scheme="https://blog.dong4j.site/tags/%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88/"/>
    
    <category term="运维管理" scheme="https://blog.dong4j.site/tags/%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>揭秘基础框架：如何简化软件开发？</title>
    <link href="https://blog.dong4j.site/posts/7774f295.html"/>
    <id>https://blog.dong4j.site/posts/7774f295.html</id>
    <published>2024-11-07T03:38:30.000Z</published>
    <updated>2025-02-07T13:48:04.531Z</updated>
    
    
    <summary type="html">本文介绍了什么是基础框架及其在软件开发中的重要性。它定义了框架为可重用的设计构件，并解释了为什么需要一个成熟的基础框架来提高开发效率、保证代码风格一致性以及促进团队协作。文章还讨论了基础框架与基础开发平台的区别，并详细描述了一个基础框架的架构和主要特性，包括技术选型、项目依赖管理、开发工具包、IDE 插件和技术组件。最后，文章概述了开发计划、代码规范以及技术文档的重要性。</summary>
    
    
    
    <category term="新时代码农" scheme="https://blog.dong4j.site/categories/%E6%96%B0%E6%97%B6%E4%BB%A3%E7%A0%81%E5%86%9C/"/>
    
    
    <category term="软件开发" scheme="https://blog.dong4j.site/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="框架" scheme="https://blog.dong4j.site/tags/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="效率" scheme="https://blog.dong4j.site/tags/%E6%95%88%E7%8E%87/"/>
    
    <category term="团队协作" scheme="https://blog.dong4j.site/tags/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/"/>
    
  </entry>
  
</feed>
